--- a/api/script-program.vm.js
+++ b/api/script-program.vm.js
@@ -15,7 +15,7 @@
 				return response.error(409);
 			}
 			
-			child_process.exec('node app-cli.js -mode reserve -id ' + program.id, function(err, stdout, stderr) {
+			child_process.exec(process.execPath + ' ' + 'app-cli.js -mode reserve -id ' + program.id, function(err, stdout, stderr) {
 				if (err) return response.error(500);
 				
 				response.head(200);
--- a/api/script-reserves-program-action.vm.js
+++ b/api/script-reserves-program-action.vm.js
@@ -10,10 +10,10 @@
 			
 			switch (request.param.action) {
 				case 'skip':
-					cmd = 'node app-cli.js -mode skip -id ' + program.id;
+					cmd = process.execPath + ' ' + 'app-cli.js -mode skip -id ' + program.id;
 					break;
 				case 'unskip':
-					cmd = 'node app-cli.js -mode unskip -id ' + program.id;
+					cmd = process.execPath + ' ' + 'app-cli.js -mode unskip -id ' + program.id;
 					break;
 			}
 			
--- a/api/script-reserves-program.vm.js
+++ b/api/script-reserves-program.vm.js
@@ -15,7 +15,7 @@
 				return response.error(409);
 			}
 			
-			child_process.exec('node app-cli.js -mode unreserve -id ' + program.id, function(err, stdout, stderr) {
+			child_process.exec(process.execPath + ' ' + 'app-cli.js -mode unreserve -id ' + program.id, function(err, stdout, stderr) {
 				if (err) return response.error(500);
 				
 				response.head(200);
--- a/api/script-rules-rule-action.vm.js
+++ b/api/script-rules-rule-action.vm.js
@@ -10,10 +10,10 @@
 			
 			switch (request.param.action) {
 				case 'enable':
-					cmd = 'node app-cli.js -mode rule --enable -n ' + request.param.num;
+					cmd = process.execPath + ' ' + 'app-cli.js -mode rule --enable -n ' + request.param.num;
 					break;
 				case 'disable':
-					cmd = 'node app-cli.js -mode rule --disable -n ' + request.param.num;
+					cmd = process.execPath + ' ' + 'app-cli.js -mode rule --disable -n ' + request.param.num;
 					break;
 			}
 			
--- a/api/script-rules-rule.vm.js
+++ b/api/script-rules-rule.vm.js
@@ -22,7 +22,7 @@
 				return response.error(400);
 			}
 			
-			child_process.exec('node app-cli.js -mode rule -n ' + request.param.num + ' ' + args.join(' '), function(err, stdout, stderr) {
+			child_process.exec(process.execPath + ' ' + 'app-cli.js -mode rule -n ' + request.param.num + ' ' + args.join(' '), function(err, stdout, stderr) {
 				if (err) return response.error(500);
 				
 				response.head(200);
@@ -31,7 +31,7 @@
 			return;
 		
 		case 'DELETE':
-			child_process.exec('node app-cli.js -mode rule --remove -n ' + request.param.num, function(err, stdout, stderr) {
+			child_process.exec(process.execPath + ' ' + 'app-cli.js -mode rule --remove -n ' + request.param.num, function(err, stdout, stderr) {
 				if (err) return response.error(500);
 				
 				response.head(200);
--- a/api/script-rules.vm.js
+++ b/api/script-rules.vm.js
@@ -18,7 +18,7 @@
 				return response.error(400);
 			}
 			
-			child_process.exec('node app-cli.js -mode rule ' + args.join(' '), function(err, stdout, stderr) {
+			child_process.exec(process.execPath + ' ' + 'app-cli.js -mode rule ' + args.join(' '), function(err, stdout, stderr) {
 				if (err) return response.error(500);
 				
 				response.head(200);
--- a/app-operator.js
+++ b/app-operator.js
@@ -150,8 +150,8 @@
 	
 	var output, finalize;
 	
-	scheduler = child_process.spawn('node', [ 'app-scheduler.js', '-f' ]);
-	util.log('SPAWN: node app-scheduler.js -f (pid=' + scheduler.pid + ')');
+	scheduler = child_process.spawn(process.execPath, [ 'app-scheduler.js', '-f' ]);
+	util.log('SPAWN: ' + process.execPath + ' app-scheduler.js -f (pid=' + scheduler.pid + ')');
 	
 	// ログ用
 	output = fs.createWriteStream('./log/scheduler', { flags: 'a' });
@@ -269,10 +269,10 @@
 	epgInterval = setInterval(function () {
 		var epgProc, output;
 		
-		epgProc = child_process.spawn('node', [
+		epgProc = child_process.spawn(process.execPath, [
 			'app-scheduler.js', '-f', '-ch', program.channel.channel, '-l', recPath
 		]);
-		util.log('SPAWN: node app-scheduler.js -f -ch ' + program.channel.channel + ' -l ' + recPath + ' (pid=' + epgProc.pid + ')');
+		util.log('SPAWN: ' + process.execPath + ' app-scheduler.js -f -ch ' + program.channel.channel + ' -l ' + recPath + ' (pid=' + epgProc.pid + ')');
 		
 		// ログ用
 		output = fs.createWriteStream('./log/scheduler', { flags: 'a' });
--- a/app-wui.js
+++ b/app-wui.js
@@ -503,6 +503,9 @@
 				setTimeout : setTimeout,
 				clearInterval: clearInterval,
 				clearTimeout : clearTimeout,
+				process: {
+					execPath : process.execPath
+				},
 				
 				children: []
 			};
